{"version":3,"sources":["Input/index.js","settings.js","Card/index.js","hooks/useWeather.js","CardList/index.js","hooks/useCitiesList.js","DailyCard/index.js","SingleCity/index.js","hooks/useForecast.js","App.js","index.js"],"names":["Input","ref","useRef","useContext","GlobalContext","state","inputValue","editingCity","dispatch","className","onChange","e","type","payload","target","value","onClick","length","current","focus","API_KEY","Card","memo","city","setCityCoord","data","useState","setData","useEffect","fetch","then","res","json","useWeather","history","useHistory","isHome","Boolean","useRouteMatch","coord","lat","lon","name","weather","main","description","icon","temp","humidity","feels_like","to","toLowerCase","src","alt","toFixed","goBack","CardList","citiesList","sortBy","setSortBy","sortedCitiesList","sort","reverse","defaultValue","map","index","initialState","JSON","parse","localStorage","getItem","reducer","action","filter","filteredArray","DailyCard","daily","dt","day","currentDate","Date","toString","split","SingleCity","useParams","cityCoord","coords","useForecast","createContext","App","useReducer","setItem","stringify","useCitiesList","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33f1d6b8.chunk.js","sourcesContent":["import './../App.css';\r\nimport React, {useContext, useRef} from \"react\";\r\nimport {GlobalContext} from \"../App\";\r\n\r\n\r\nexport const Input = () => {\r\n\r\n    const ref = useRef()\r\n    const {state: {inputValue, editingCity}, dispatch} = useContext(GlobalContext)\r\n\r\n    const handleOnChange = (e) => {\r\n        dispatch({\r\n            type: 'CHANGE_INPUT_VALUE',\r\n            payload: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleOnAdd = (e) => {\r\n        if(inputValue.length) {\r\n            dispatch({\r\n                type: 'ADD_CITY',\r\n                payload: inputValue\r\n            })\r\n            dispatch({\r\n                type: 'RESET_INPUT_VALUE'\r\n            })\r\n            ref.current.focus()\r\n        }\r\n    }\r\n\r\n\r\n    const handleOnDone = (e) => {\r\n        if(inputValue.length) {\r\n            dispatch({\r\n                type: 'EDIT_CITY_DONE',\r\n                payload: inputValue\r\n            })\r\n            dispatch({\r\n                type: 'RESET_INPUT_VALUE'\r\n            })\r\n            ref.current.focus()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"InputWrap\">\r\n            <input className=\"Input\" onChange={handleOnChange} value={inputValue} ref={ref} />\r\n            {\r\n                editingCity\r\n                    ? <button className=\"Button\"onClick={handleOnDone} >Edit</button>\r\n                    : <button className=\"Button\"onClick={handleOnAdd} >+</button>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","export const API_KEY = '145b9eeeb88b3b9ef40945480a90519e'","import './../App.css';\r\nimport React, {memo, useContext, useEffect} from \"react\";\r\nimport {useWeather} from \"../hooks/useWeather\";\r\nimport {GlobalContext} from \"../App\";\r\nimport {Link, useHistory, useRouteMatch} from \"react-router-dom\";\r\n\r\nexport const Card = memo(({city, setCityCoord}) => {\r\n\r\n    const data = useWeather(city)\r\n    const history = useHistory();\r\n    const isHome = Boolean(useRouteMatch('/'));\r\n\r\n    const {dispatch} = useContext(GlobalContext)\r\n\r\n\r\n    useEffect(() => {\r\n        if(data && data.coord.lat && data.coord.lon && setCityCoord) {\r\n            setCityCoord({\r\n                lat: data.coord.lat,\r\n                lon: data.coord.lon\r\n            })\r\n        }\r\n    }, [data, setCityCoord])\r\n\r\n    if (!data) return null;\r\n    const {name, weather, main} = data;\r\n    const {description, icon} = weather[0];\r\n    const {temp, humidity, feels_like} = main\r\n\r\n    const handleOnDelete = () => {\r\n        dispatch({\r\n            type: 'DELETE_CITY',\r\n            payload: city\r\n        })\r\n    }\r\n\r\n    const handleOnEdit = () => {\r\n        dispatch({\r\n            type: 'EDIT_CITY',\r\n            payload: city\r\n        })\r\n    }\r\n\r\n    const handleOnBack = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    if (isHome) {\r\n        return (\r\n            <div className=\"Card\">\r\n                <div className=\"ActionButtonWrap\">\r\n                    <button onClick={handleOnEdit} className=\"ActionButton\">Edit</button>\r\n                    <button onClick={handleOnDelete} className=\"ActionButton\">X</button>\r\n                </div>\r\n                <Link to={`/city/${city.toLowerCase()}`} className=\"Card__wrap\">\r\n                    <div className=\"MainInfo\">\r\n                        <img className=\"Icon\" src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"icon\"/>\r\n                        <div className=\"Title\">{name}</div>\r\n                        <div className=\"Description\">{description}</div>\r\n                        <div className=\"Temperature TemperatureIcon\">{temp.toFixed()}</div>\r\n                    </div>\r\n                    <div className=\"Information\">\r\n                        <div>Humidity: {humidity}</div>\r\n                        <div>Feels like: {feels_like}</div>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"Card\">\r\n            <div className=\"ActionButtonWrap\">\r\n                <button onClick={handleOnBack} className=\"ActionButton\">Back</button>\r\n            </div>\r\n            <div className=\"MainInfo\">\r\n                <img className=\"Icon\" src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"icon\"/>\r\n                <div className=\"Title\">{name}</div>\r\n                <div className=\"Description\">{description}</div>\r\n                <div className=\"Temperature TemperatureIcon\">{temp.toFixed()}</div>\r\n            </div>\r\n            <div className=\"Information\">\r\n                <div>Humidity: {humidity}</div>\r\n                <div>Feels like: {feels_like}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import {useEffect, useState} from \"react\";\r\nimport {API_KEY} from \"../settings\";\r\n\r\nexport const useWeather = (city) => {\r\n\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`)\r\n            .then(res => res.json())\r\n            .then(json => setData(json))\r\n    }, [city])\r\n\r\n    return data;\r\n\r\n}","import './../App.css';\r\nimport React, {useContext, useState} from \"react\";\r\nimport {Card} from \"../Card\";\r\nimport {GlobalContext} from \"../App\";\r\n\r\n\r\nexport const CardList = () => {\r\n\r\n    const {state: {citiesList}} = useContext(GlobalContext)\r\n\r\n    const [sortBy, setSortBy] = useState('asc');\r\n\r\n    let sortedCitiesList = citiesList.sort();\r\n    if(sortBy === 'asc') {\r\n        sortedCitiesList.reverse();\r\n    }\r\n\r\n    const handleOnChange = (e) => {\r\n        setSortBy(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <select className=\"Select\" defaultValue={sortBy} onChange={handleOnChange}>\r\n                <option value=\"asc\">By name asc</option>\r\n                <option value=\"desc\">By name desc</option>\r\n            </select>\r\n            <div className=\"CardList\">\r\n                {\r\n                    sortedCitiesList.map((city, index) => <Card city={city} key={index}/>)\r\n                }\r\n            </div>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n","import {useEffect, useReducer} from \"react\";\r\n\r\n\r\nconst initialState = {\r\n    inputValue: '',\r\n    editingCity: '',\r\n    citiesList: JSON.parse(localStorage.getItem('citiesList')) || []\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_CITY':\r\n            return {\r\n                ...state,\r\n                citiesList: [...state.citiesList, action.payload]\r\n            }\r\n        case 'DELETE_CITY':\r\n            return {\r\n                ...state,\r\n                citiesList: state.citiesList.filter(city => city !== action.payload)\r\n            }\r\n        case 'EDIT_CITY':\r\n            return {\r\n                ...state,\r\n                inputValue: action.payload,\r\n                editingCity: action.payload\r\n            }\r\n        case 'EDIT_CITY_DONE':\r\n            const filteredArray = state.citiesList.filter(city => city !== state.editingCity)\r\n            return {\r\n                ...state,\r\n                citiesList: [...filteredArray, action.payload],\r\n                inputValue: '',\r\n                editingCity: ''\r\n            }\r\n        case 'CHANGE_INPUT_VALUE':\r\n            return {\r\n                ...state,\r\n                inputValue: action.payload\r\n            }\r\n        case 'RESET_INPUT_VALUE':\r\n            return {\r\n                ...state,\r\n                inputValue: ''\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const useCitiesList = () => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n    const {citiesList} = state\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('citiesList', JSON.stringify(citiesList))\r\n    }, [citiesList])\r\n\r\n    return [state, dispatch]\r\n\r\n}","import './../App.css';\r\nimport React from \"react\";\r\n\r\nexport const DailyCard = ({daily}) => {\r\n    const {dt, weather, temp: {day}} = daily;\r\n    const {main, icon} = weather[0];\r\n    const currentDate = new Date(dt * 1000)\r\n    return (\r\n        <div className=\"DailyCard\">\r\n            <div>{currentDate.toString().split(' ')[0]}</div>\r\n            <img className=\"Icon\" src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"icon\"/>\r\n            <div className=\"TemperatureIcon\">{day.toFixed(0)}</div>\r\n            <div>{main}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","import './../App.css';\r\nimport React, {useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Card} from \"../Card\";\r\nimport {useForecast} from \"../hooks/useForecast\";\r\nimport {DailyCard} from \"../DailyCard\";\r\n\r\nexport const SingleCity = () => {\r\n\r\n    const {city} = useParams();\r\n    const [cityCoord, setCityCoord] = useState(null)\r\n\r\n    const data = useForecast(cityCoord)\r\n\r\n    return (\r\n        <div className=\"SingleCityWrap\">\r\n            <Card city={city} setCityCoord={setCityCoord}/>\r\n            {data &&\r\n            <div className=\"DailyCards\">\r\n                {data.daily.map((daily, index) => <DailyCard key={index} daily={daily} />)}\r\n            </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","import {useEffect, useState} from \"react\";\r\nimport {API_KEY} from \"../settings\";\r\n\r\nexport const useForecast = (coords) => {\r\n\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if(coords !== null) {\r\n            const {lat, lon} = coords\r\n            fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`)\r\n                .then(res => res.json())\r\n                .then(json => setData(json))\r\n        }\r\n    }, [coords])\r\n\r\n    return data;\r\n\r\n}","import './App.css';\nimport {Input} from \"./Input\";\nimport {CardList} from \"./CardList\";\nimport {useCitiesList} from \"./hooks/useCitiesList\";\nimport {createContext} from \"react\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport {SingleCity} from \"./SingleCity\";\n\nexport const GlobalContext = createContext();\n\nfunction App() {\n\n    const [state, dispatch] = useCitiesList()\n\n    return (\n        <BrowserRouter>\n            <GlobalContext.Provider value={{state, dispatch}}>\n                <div className=\"Main\">\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Input/>\n                            <CardList/>\n                        </Route>\n                        <Route path=\"/city/:city\">\n                            <SingleCity/>\n                        </Route>\n                    </Switch>\n                </div>\n            </GlobalContext.Provider>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
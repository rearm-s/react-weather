{"version":3,"sources":["Input/index.js","settings.js","Card/index.js","hooks/useWeather.js","CardList/index.js","hooks/useCitiesList.js","DailyCard/index.js","SingleCity/index.js","hooks/useForecast.js","App.js","index.js"],"names":["Input","ref","useRef","useContext","GlobalContext","state","inputValue","editingCity","citiesList","dispatch","className","onChange","e","type","payload","target","value","placeholder","onClick","length","current","focus","includes","alert","API_KEY","Card","memo","city","setCityCoord","data","useState","setData","useEffect","fetch","then","res","json","catch","error","cod","useWeather","history","useHistory","location","useLocation","coord","lat","lon","name","weather","main","description","icon","temp","humidity","feels_like","pathname","to","toLowerCase","src","alt","toFixed","goBack","CardList","sortBy","setSortBy","sortedCitiesList","sort","reverse","defaultValue","map","index","initialState","JSON","parse","localStorage","getItem","reducer","action","filter","filteredArray","DailyCard","daily","dt","day","currentDate","Date","toString","split","SingleCity","useParams","cityCoord","coords","useForecast","createContext","App","useReducer","setItem","stringify","useCitiesList","basename","process","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef2c0134.chunk.js","sourcesContent":["import './../App.css';\r\nimport React, {useContext, useRef} from \"react\";\r\nimport {GlobalContext} from \"../App\";\r\n\r\n\r\nexport const Input = () => {\r\n\r\n    const ref = useRef()\r\n    const {state: {inputValue, editingCity, citiesList}, dispatch} = useContext(GlobalContext)\r\n\r\n    const handleOnChange = (e) => {\r\n        dispatch({\r\n            type: 'CHANGE_INPUT_VALUE',\r\n            payload: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleOnAdd = () => {\r\n        if(inputValue.length && !citiesList.includes(inputValue)) {\r\n            dispatch({\r\n                type: 'ADD_CITY',\r\n                payload: inputValue\r\n            })\r\n            dispatch({\r\n                type: 'RESET_INPUT_VALUE'\r\n            })\r\n            ref.current.focus()\r\n        }\r\n        if(citiesList.includes(inputValue)) {\r\n            alert('This city added yet')\r\n        }\r\n    }\r\n\r\n\r\n    const handleOnDone = () => {\r\n        if(inputValue.length) {\r\n            dispatch({\r\n                type: 'EDIT_CITY_DONE',\r\n                payload: inputValue\r\n            })\r\n            dispatch({\r\n                type: 'RESET_INPUT_VALUE'\r\n            })\r\n            ref.current.focus()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"inputWrap\">\r\n            <input className=\"input\" onChange={handleOnChange} value={inputValue} ref={ref} placeholder=\"Type your city here, for example - Kyiv\" />\r\n            {\r\n                editingCity\r\n                    ? <button className=\"button\"onClick={handleOnDone}>Edit</button>\r\n                    : <button className=\"button\"onClick={handleOnAdd} >Add city</button>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","export const API_KEY = '145b9eeeb88b3b9ef40945480a90519e'","import './../App.css';\r\nimport React, {memo, useContext, useEffect} from \"react\";\r\nimport {useWeather} from \"../hooks/useWeather\";\r\nimport {GlobalContext} from \"../App\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\n\r\nexport const Card = memo(({city, setCityCoord}) => {\r\n\r\n    const data = useWeather(city)\r\n    const history = useHistory();\r\n    const location = useLocation()\r\n    const {dispatch} = useContext(GlobalContext)\r\n\r\n\r\n    useEffect(() => {\r\n        if (data && data.coord.lat && data.coord.lon && setCityCoord) {\r\n            setCityCoord({\r\n                lat: data.coord.lat,\r\n                lon: data.coord.lon\r\n            })\r\n        }\r\n    }, [data, setCityCoord])\r\n\r\n\r\n    if (!data) return null;\r\n\r\n    const {name, weather, main} = data;\r\n    const {description, icon} = weather[0];\r\n    const {temp, humidity, feels_like} = main\r\n\r\n\r\n    const handleOnDelete = () => {\r\n        dispatch({\r\n            type: 'DELETE_CITY',\r\n            payload: city\r\n        })\r\n    }\r\n\r\n\r\n    const handleOnEdit = () => {\r\n        dispatch({\r\n            type: 'EDIT_CITY',\r\n            payload: city\r\n        })\r\n    }\r\n\r\n    const handleOnBack = () => {\r\n        history.goBack()\r\n    }\r\n\r\n\r\n    if (location.pathname === '/') {\r\n        return (\r\n            <div className=\"card\">\r\n                <Link to={`/city/${city.toLowerCase()}`} className=\"card__wrap\">\r\n                    <div className=\"mainInfo\">\r\n                        <img className=\"icon\" src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"icon\"/>\r\n                        <div className=\"title\">{name}</div>\r\n                        <div className=\"description\">{description}</div>\r\n                        <div className=\"temperature temperatureIcon\">{temp.toFixed()}</div>\r\n                    </div>\r\n                    <div className=\"information\">\r\n                        <div>Humidity: {humidity}</div>\r\n                        <div>Feels like: {feels_like}</div>\r\n                    </div>\r\n                </Link>\r\n                <div className=\"actionButtonWrap\">\r\n                    <button onClick={handleOnEdit} className=\"actionButton\">Edit</button>\r\n                    <button onClick={handleOnDelete} className=\"actionButton\">Delete</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"actionButtonWrap\">\r\n                <button onClick={handleOnBack} className=\"actionButton\">Back</button>\r\n            </div>\r\n            <div className=\"mainInfo\">\r\n                <img className=\"icon\" src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"icon\"/>\r\n                <div className=\"title\">{name}</div>\r\n                <div className=\"description\">{description}</div>\r\n                <div className=\"temperature temperatureIcon\">{temp.toFixed()}</div>\r\n            </div>\r\n            <div className=\"information\">\r\n                <div>Humidity: {humidity}</div>\r\n                <div>Feels like: {feels_like}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import {useEffect, useState} from \"react\";\r\nimport {API_KEY} from \"../settings\";\r\n\r\nexport const useWeather = (city) => {\r\n\r\n    const [data, setData] = useState(null);\r\n    useEffect(() => {\r\n            try {\r\n                fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`)\r\n                    .then(res => res.json())\r\n                    .then(json => setData(json))\r\n                    .catch(error => alert('some error'))\r\n            }\r\n            catch(e) {\r\n                alert('error')\r\n            }\r\n    }, [city])\r\n\r\n    if(data?.cod === \"404\") return null;\r\n\r\n    return data;\r\n\r\n}","import './../App.css';\r\nimport React, {useContext, useState} from \"react\";\r\nimport {Card} from \"../Card\";\r\nimport {GlobalContext} from \"../App\";\r\n\r\n\r\nexport const CardList = () => {\r\n\r\n    const {state: {citiesList}} = useContext(GlobalContext)\r\n\r\n    const [sortBy, setSortBy] = useState('asc');\r\n\r\n    let sortedCitiesList = citiesList.sort();\r\n    if(sortBy === 'asc') {\r\n        sortedCitiesList.reverse();\r\n    }\r\n\r\n    const handleOnChange = (e) => {\r\n        setSortBy(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <select className=\"select\" defaultValue={sortBy} onChange={handleOnChange}>\r\n                <option value=\"asc\">By name asc</option>\r\n                <option value=\"desc\">By name desc</option>\r\n            </select>\r\n            <div className=\"cardList\">\r\n                {\r\n                    sortedCitiesList.map((city, index) => <Card city={city} key={index}/>)\r\n                }\r\n            </div>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n","import {useEffect, useReducer} from \"react\";\r\n\r\n\r\nconst initialState = {\r\n    inputValue: '',\r\n    editingCity: '',\r\n    citiesList: JSON.parse(localStorage.getItem('citiesList')) || []\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_CITY':\r\n            return {\r\n                ...state,\r\n                citiesList: [...state.citiesList, action.payload]\r\n            }\r\n        case 'DELETE_CITY':\r\n            return {\r\n                ...state,\r\n                citiesList: state.citiesList.filter(city => city !== action.payload)\r\n            }\r\n        case 'EDIT_CITY':\r\n            return {\r\n                ...state,\r\n                inputValue: action.payload,\r\n                editingCity: action.payload\r\n            }\r\n        case 'EDIT_CITY_DONE':\r\n            const filteredArray = state.citiesList.filter(city => city !== state.editingCity)\r\n            return {\r\n                ...state,\r\n                citiesList: [...filteredArray, action.payload],\r\n                inputValue: '',\r\n                editingCity: ''\r\n            }\r\n        case 'CHANGE_INPUT_VALUE':\r\n            return {\r\n                ...state,\r\n                inputValue: action.payload\r\n            }\r\n        case 'RESET_INPUT_VALUE':\r\n            return {\r\n                ...state,\r\n                inputValue: ''\r\n            }\r\n        case 'ADD_AFTER':\r\n            return {\r\n                ...state,\r\n                citiesList: [...state.citiesList, action.payload]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const useCitiesList = () => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n    const {citiesList} = state\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('citiesList', JSON.stringify(citiesList))\r\n    }, [citiesList])\r\n\r\n    return [state, dispatch]\r\n\r\n}","import './../App.css';\r\nimport React from \"react\";\r\n\r\nexport const DailyCard = ({daily}) => {\r\n    const {dt, weather, temp: {day}} = daily;\r\n    const {main, icon} = weather[0];\r\n    const currentDate = new Date(dt * 1000)\r\n    return (\r\n        <div className=\"dailyCard\">\r\n            <div>{currentDate.toString().split(' ')[0]}</div>\r\n            <img className=\"icon\" src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"icon\"/>\r\n            <div className=\"temperatureIcon\">{day.toFixed(0)}</div>\r\n            <div>{main}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","import './../App.css';\r\nimport React, {useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Card} from \"../Card\";\r\nimport {useForecast} from \"../hooks/useForecast\";\r\nimport {DailyCard} from \"../DailyCard\";\r\n\r\nexport const SingleCity = () => {\r\n\r\n    const {city} = useParams();\r\n    const [cityCoord, setCityCoord] = useState(null)\r\n\r\n    const data = useForecast(cityCoord)\r\n\r\n    return (\r\n        <div className=\"singleCityWrap\">\r\n            <Card city={city} setCityCoord={setCityCoord}/>\r\n            {data &&\r\n            <div className=\"dailyCards\">\r\n                {data.daily.map((daily, index) => <DailyCard key={index} daily={daily} />)}\r\n            </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","import {useEffect, useState} from \"react\";\r\nimport {API_KEY} from \"../settings\";\r\n\r\nexport const useForecast = (coords) => {\r\n\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if(coords !== null) {\r\n            const {lat, lon} = coords\r\n            fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`)\r\n                .then(res => res.json())\r\n                .then(json => setData(json))\r\n        }\r\n    }, [coords])\r\n\r\n    return data;\r\n\r\n}","import './App.css';\nimport {Input} from \"./Input\";\nimport {CardList} from \"./CardList\";\nimport {useCitiesList} from \"./hooks/useCitiesList\";\nimport {createContext} from \"react\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport {SingleCity} from \"./SingleCity\";\n\nexport const GlobalContext = createContext();\n\nfunction App() {\n\n    const [state, dispatch] = useCitiesList()\n\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <GlobalContext.Provider value={{state, dispatch}}>\n                <div className=\"main\">\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Input/>\n                            <CardList/>\n                        </Route>\n                        <Route path=\"/city/:city\">\n                            <SingleCity/>\n                        </Route>\n                    </Switch>\n                </div>\n            </GlobalContext.Provider>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}